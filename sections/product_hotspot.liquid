<style>
  .products-hotspot-{{ section.id }} {
    background-color: {{ section.settings.background_color }};
  }
  .products-hotspot-{{ section.id }} .section-heading {
    margin-bottom: 30px;
    color: {{ section.settings.heading_color }};
    font-weight: 400;
  }
  @media (min-width: 1025px) {
    .products-hotspot-{{ section.id }} {
      padding-top: {{ section.settings.padding_top_desktop }}px;
      padding-bottom: {{ section.settings.padding_bottom_desktop }}px;
    }
    .section-heading { 
      font-size: {{ section.settings.heading_size_desktop }}px; 
    }
  }
  @media (min-width: 768px) and (max-width: 1024px) {
    .products-hotspot-{{ section.id }} {
      padding-top: {{ section.settings.padding_top_tablet }}px;
      padding-bottom: {{ section.settings.padding_bottom_tablet }}px;
    }
    .section-heading { 
      font-size: {{ section.settings.heading_size_tablet }}px; 
    }
  }
  @media (max-width: 767px) {
    .products-hotspot-{{ section.id }} {
      padding-top: {{ section.settings.padding_top_mobile }}px;
      padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
    }
    .section-heading { 
      font-size: {{ section.settings.heading_size_mobile }}px; 
    }
  }

  .products-hotspot-{{ section.id }} .grid-container {
    display: grid;
    gap: 20px;
    grid-template-columns: repeat(2, 1fr);
  }
  
  @media (min-width: 1024px) {
    .products-hotspot-{{ section.id }} .grid-container {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .products-hotspot-{{ section.id }} .card-block {
    position: relative;
    display: flex;
  }

  .products-hotspot-{{ section.id }} .card-block img {
    max-width: 100%;
  }

  .products-hotspot-{{ section.id }} .quick-view {
    position: absolute;
    background: white;
    border: 0;
    padding: 6px;
    cursor: pointer;
    border-radius: 50%;
    line-height: 1;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .products-hotspot-{{ section.id }} .quick-view-modal {
    display: none;
    justify-content: center;
    align-items: center;
    position: fixed;
    background: rgba(0, 0, 0, 0.5);
    top: 0; left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
  }

  .products-hotspot-{{ section.id }} .quick-view-modal[aria-hidden="false"] {
    display: flex;
  }

  .products-hotspot-{{ section.id }} .modal-content {
    background: #fff;
    padding: 25px 20px;
    width: 100%;
    max-width: 310px;
    position: relative;
  }

  .modal-grid {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .products-hotspot-{{ section.id }} .modal-content .product_image_details .modal-image {
    width: 100%;
    max-width: 120px;
    height: 140px;
  }

  .modal-details {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .product_image_details {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 5px;
  }

  .product-title {
    font-size: 16px;
    color: #000000;
    font-weight: 300;
    margin: 5px 0 10px;
    line-height: 1;
  }

  .product-price {
    font-size: 16px;
    color: #000000;
    font-weight: 400;
    margin: 0 0 10px;
    line-height: 1;
  }

  .product-description {
    font-size: 14px;
    color: #000000;
    font-weight: 300;
    line-height: 1;
    margin: 0px;
  }

  .option-label {
    font-size: 14px;
    font-weight: 400;
    color: #000000;
    margin: 11px 0 6px;
    line-height: 1;
  }

  .swatches {
    display: flex;
    gap: 8px;
  }

  .swatches {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    margin-right: -4px;
    align-items: center;
    justify-content: center;
  }
  
  .swatch {
    padding: 11px 13px;
    font-size: 18px;
    font-weight: 400;
    color: black;
    background: white;
    border: 1px solid #000000;
    box-shadow: -4px 0 0 0 var(--swatch-color, #000);
    cursor: pointer;
    min-width: 131px;
    box-sizing: border-box;
    transition: all 0.2s ease;
    line-height: 1;
  }

  .swatch.active {
    background: black;
    color: white;
  }

  .custom-select-wrapper {
    position: relative;
    display: block;
    width: 100%;
  }

  .size-select {
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 100%;
    padding: 12px 40px 12px 12px;
    font-size: 14px;
    color: #000;
    border: 1px solid #000000;
    border-radius: 0;
    background-color: #fff;
    cursor: pointer;
  }

  .custom-select-wrapper::before {
    content: "";
    position: absolute;
    top: 0;
    right: 55px;
    width: 1px;
    height: 100%;
    background-color: #000000;
    z-index: 2;
  }

  .custom-select-wrapper::after {
    content: "";
    position: absolute;
    pointer-events: none;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
    width: 16px;
    height: 10px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='10' viewBox='0 0 16 10' fill='none'%3E%3Cpath d='M2 2L8 8L14 2' stroke='black' stroke-width='1.5' stroke-linecap='square'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-size: contain;
  }

  .option-label {
    font-size: 14px;
    margin-bottom: 6px;
    color: #000;
  }
  
  .size-select:focus {
    outline: none;
  }

  .size-select:focus-visible {
    outline: none;
    outline-offset: none;
    box-shadow: none;
  }

  .size-select option {
    padding: 10px;
    font-size: 16px;
    font-weight: 400;
  }
  
  .add-to-cart-btn {
    background: linear-gradient(to left, black 50%, #FFF544 50%);
    background-size: 200% 100%;
    background-position: right bottom;
    color: white;
    padding: 14px;
    width: 100%;
    text-transform: uppercase;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 28px;
    border: none;
    margin-top: 38px;
    font-size: 16px;
    font-weight: 400;
    cursor: pointer;
    transition: background-position 0.3s ease, color 0.3s ease;
  }
  
  .add-to-cart-btn:hover {
    background-position: left bottom;
    color: black;
  }
  
  .add-to-cart-btn svg path {
    transition: fill 0.3s ease;
  }
  
  .add-to-cart-btn:hover svg path {
    fill: black;
  }

  .close-quick-view {
    position: absolute;
    top: 10px;
    right: 10px;
    cursor: pointer;
    font-size: 18px;
  }
</style>

<div class="products-hotspot-{{ section.id }}">
  <div class="custom-container">
    <div class="section-heading">{{ section.settings.section_heading }}</div>
    <div class="grid-container">
      {% for block in section.blocks %}
        {% assign product = block.settings.product %}
        {% if product %}
          <div class="card-block">
            {% if block.settings.image %}
              <img src="{{ block.settings.image | image_url: width: 600 }}" alt="{{ product.title }}" />
            
              <button class="quick-view" data-modal-target="quick-view-{{ product.handle }}" style="top: {{ block.settings.popup_vertical }}%; left: {{ block.settings.popup_horizontal }}%; transform: translate({{ block.settings.popup_horizontal }}% , { block.settings.popup_vertical }}%)">
                <svg xmlns="http://www.w3.org/2000/svg" width="11" height="11" viewBox="0 0 11 11" fill="none">
                  <path d="M5.3457 1.04175V9.50329" stroke="black" stroke-width="1.5" stroke-linecap="square" stroke-linejoin="round"/>
                  <path d="M1.11523 5.27246H9.57677" stroke="black" stroke-width="1.5" stroke-linecap="square" stroke-linejoin="round"/>
                </svg>
              </button>
            {% endif %}
          
            <div class="quick-view-modal" id="quick-view-{{ product.handle }}" aria-hidden="true">
              <div class="modal-content">
                <svg class="close-quick-view" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
                  <path d="M5.0376 4.9436L13.5229 13.4289" stroke="black" stroke-width="1.5" stroke-linecap="square" stroke-linejoin="round"/>
                  <path d="M5.0376 13.4285L13.5229 4.94319" stroke="black" stroke-width="1.5" stroke-linecap="square" stroke-linejoin="round"/>
                </svg>

                <div class="modal-grid">
                  <div class="product_image_details">
                    <img class="modal-image" src="{{ product.featured_image | image_url: width: 400 }}" alt="{{ product.title }}" />
                    <div class="product-detail">
                      <h2 class="product-title">{{ product.title }}</h2>
                      <p class="product-price">{{ product.price | money }}</p>
                      <p class="product-description">{{ product.description | strip_html }}</p>
                    </div>
                  </div>
                  <div class="modal-details">
                    {% assign color_index = -1 %}
                    {% assign size_index = -1 %}
                    {% for option in product.options_with_values %}
                      {% if option.name == "Color" %}
                        {% assign color_index = forloop.index0 %}
                      {% elsif option.name == "Size" %}
                        {% assign size_index = forloop.index0 %}
                      {% endif %}
                    {% endfor %}

                    <form method="post" action="/cart/add" class="quick-view-form" data-product-id="{{ product.id }}">
                      <input type="hidden" name="form_type" value="product" />
                      <input type="hidden" name="id" class="variant-id" value="{{ product.variants.first.id }}" />

                      <div class="color_swatches">
                        {% if color_index != -1 %}
                          <div class="option-label">Color</div>
                          <div class="swatches">
                            {% assign seen_colors = "" %}
                            {% for variant in product.variants %}
                              {% assign color = variant.options[color_index] %}
                              {% unless seen_colors contains color %}
                                {% assign seen_colors = seen_colors | append: color | append: "," %}
                                {% assign swatch_color = color | downcase %}
                          
                                <div
                                  class="swatch"
                                  data-color="{{ color }}"
                                  style="--swatch-color: {{ swatch_color | default: '#000' }};"
                                >
                                  {{ color }}
                                </div>
                              {% endunless %}
                            {% endfor %}
                          </div>
                        {% endif %}
                      </div>
                      
                      <div class="variants">
                        {% if size_index != -1 %}
                          <div class="option-label">Size</div>
                          <div class="custom-select-wrapper">
                            <select class="size-select">
                              <option value="">Choose your size</option>
                              {% assign seen_sizes = "" %}
                              {% for variant in product.variants %}
                                {% assign size = variant.options[size_index] %}
                                {% unless seen_sizes contains size %}
                                  {% assign seen_sizes = seen_sizes | append: size | append: "," %}
                                  <option value="{{ size }}">{{ size }}</option>
                                {% endunless %}
                              {% endfor %}
                            </select>
                          </div>
                        {% endif %}
                      </div>
                      <script type="application/json" id="variants-{{ product.id }}">
                        {{ product.variants | json }}
                      </script>

                      <button type="submit" class="add-to-cart-btn">
                        ADD TO CART
                        <svg xmlns="http://www.w3.org/2000/svg" width="36" height="12" viewBox="0 0 36 12" fill="none">
                          <path d="M1.4093 5.25L0.659302 5.25L0.659302 6.75L1.4093 6.75L1.4093 5.25ZM35.6391 6.53033C35.932 6.23744 35.932 5.76257 35.6391 5.46967L30.8661 0.696701C30.5733 0.403808 30.0984 0.403808 29.8055 0.696701C29.5126 0.989594 29.5126 1.46447 29.8055 1.75736L34.0481 6L29.8055 10.2426C29.5126 10.5355 29.5126 11.0104 29.8055 11.3033C30.0984 11.5962 30.5732 11.5962 30.8661 11.3033L35.6391 6.53033ZM1.4093 6.75L35.1088 6.75L35.1088 5.25L1.4093 5.25L1.4093 6.75Z" fill="white"/>
                        </svg>
                      </button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll('.quick-view').forEach(button => {
      button.addEventListener('click', function () {
        const targetId = this.dataset.modalTarget;
        document.getElementById(targetId).setAttribute('aria-hidden', 'false');
      });
    });

    document.querySelectorAll('.close-quick-view').forEach(btn => {
      btn.addEventListener('click', function () {
        this.closest('.quick-view-modal').setAttribute('aria-hidden', 'true');
      });
    });

    document.addEventListener('keydown', function (e) {
      if (e.key === "Escape") {
        document.querySelectorAll('.quick-view-modal').forEach(modal => {
          modal.setAttribute('aria-hidden', 'true');
        });
      }
    });

    document.querySelectorAll('.quick-view-form').forEach(form => {
      const variantInput = form.querySelector('.variant-id');
      const swatches = form.querySelectorAll('.swatch');
      const sizeSelect = form.querySelector('.size-select');
      const variants = JSON.parse(document.getElementById(`variants-${form.dataset.productId}`).textContent);

      function updateVariant() {
        const selectedColor = form.querySelector('.swatch.active')?.dataset.color;
        const selectedSize = sizeSelect?.value || null;
        const matched = variants.find(v =>
          v.options.includes(selectedColor) &&
          (!selectedSize || v.options.includes(selectedSize))
        );
        if (matched) variantInput.value = matched.id;
      }

      swatches.forEach(swatch => {
        swatch.addEventListener('click', () => {
          swatches.forEach(s => s.classList.remove('active'));
          swatch.classList.add('active');
          updateVariant();
        });
      });

      if (sizeSelect) {
        sizeSelect.addEventListener('change', () => {
          updateVariant();

          const selectedIndex = sizeSelect.selectedIndex;
          const options = sizeSelect.querySelectorAll('option');
      
          options.forEach((option, index) => {
            if (index === selectedIndex && option.value !== "") {
              option.classList.add('selected');
            } else {
              option.classList.remove('selected');
            }
          });
        });
      }
    });
  });
</script>

{% schema %}
  {
    "name": "Products Hotspot",
    "settings": [
      {
        "type": "header",
        "content": "Section Heading"
      },
      {
        "type": "text",
        "id": "section_heading",
        "label": "Section Heading",
        "default": "Tisso vison in the wild"
      },
      {
        "type": "range",
        "id": "heading_size_desktop",
        "label": "Heading Font Size For Desktop",
        "default": 36,
        "min": 16,
        "max": 64,
        "unit": "px",
        "step": 2
      },
      {
        "type": "range",
        "id": "heading_size_tablet",
        "label": "Heading Font Size For Tablet",
        "default": 28,
        "min": 16,
        "max": 64,
        "unit": "px",
        "step": 2
      },
      {
        "type": "range",
        "id": "heading_size_mobile",
        "label": "Heading Font Size For Mobile",
        "default": 24,
        "min": 16,
        "max": 64,
        "unit": "px",
        "step": 2
      },
      {
        "type": "range",
        "id": "heading_margin_bottom",
        "label": "Heading Margin Bottom",
        "default": 30,
        "min": 16,
        "max": 60,
        "unit": "px",
        "step": 2
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "id": "background_color",
        "label": "Section Background Color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "id": "heading_color",
        "label": "Section Heading Color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section Top/Bottom Padding"
      },
      {
        "type": "range",
        "id": "padding_top_desktop",
        "label": "Padding Top For Desktop",
        "default": 36,
        "min": 0,
        "max": 100,
        "unit": "px",
        "step": 2
      },
      {
        "type": "range",
        "id": "padding_bottom_desktop",
        "label": "Padding Bottom For Desktop",
        "default": 36,
        "min": 0,
        "max": 100,
        "unit": "px",
        "step": 2
      },
      {
        "type": "range",
        "id": "padding_top_tablet",
        "label": "Padding Top For Tablet",
        "default": 24,
        "min": 0,
        "max": 100,
        "unit": "px",
        "step": 2
      },
      {
        "type": "range",
        "id": "padding_bottom_tablet",
        "label": "Padding Bottom For Tablet",
        "default": 24,
        "min": 0,
        "max": 100,
        "unit": "px",
        "step": 2
      },
      {
        "type": "range",
        "id": "padding_top_mobile",
        "label": "Padding Top For Mobile",
        "default": 16,
        "min": 0,
        "max": 100,
        "unit": "px",
        "step": 2
      },
      {
        "type": "range",
        "id": "padding_bottom_mobile",
        "label": "Padding Bottom For Mobile",
        "default": 16,
        "min": 0,
        "max": 100,
        "unit": "px",
        "step": 2
      }
    ],
    "blocks": [
      {
        "type": "image_card",
        "name": "Image Card",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Product Image"
          },
          {
            "type": "product",
            "id": "product",
            "label": "Select Product"
          },
          {
            "type": "header",
            "content": "Popup Button Position Adjustment"
          },
          {
            "type": "range",
            "id": "popup_vertical",
            "label": "Vertical Position (%)",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 10
          },
          {
            "type": "range",
            "id": "popup_horizontal",
            "label": "Horizontal Position (%)",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 10
          },
        ]
      }
    ],
    "presets": [
      {
      "name": "Products Hotspot",
      "category": "Custom"
      }
    ]
  }
{% endschema %}